-- MySQL Script generated by MySQL Workbench
-- Thu Nov  7 10:49:23 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema djangoschema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema djangoschema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `djangoschema` DEFAULT CHARACTER SET utf8 ;
USE `djangoschema` ;

-- -----------------------------------------------------
-- Table `djangoschema`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`table1` (
  `idtable1` INT NOT NULL,
  `table1col` VARCHAR(45) NULL,
  PRIMARY KEY (`idtable1`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Adres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Adres` (
  `idAdres` INT NOT NULL,
  `Ulica` VARCHAR(45) NULL,
  `Numer` VARCHAR(45) NULL,
  `Kod Pocztowy` INT NULL,
  `Miejscowosc` VARCHAR(45) NULL,
  PRIMARY KEY (`idAdres`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Pododdział`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Pododdział` (
  `idPododdział` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Personel` INT NOT NULL,
  PRIMARY KEY (`idPododdział`),
  INDEX `Personel_idx` (`Personel` ASC) VISIBLE,
  CONSTRAINT `Personel`
    FOREIGN KEY (`Personel`)
    REFERENCES `djangoschema`.`Personel` (`idPersonel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Stopień`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Stopień` (
  `idStopień` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Wynagrodzenie` VARCHAR(45) NULL,
  PRIMARY KEY (`idStopień`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Personel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Personel` (
  `idPersonel` INT NOT NULL,
  `Imie` VARCHAR(45) NULL,
  `Nazwisko` VARCHAR(45) NULL,
  `Stopień` INT NOT NULL,
  `Adres` INT NOT NULL,
  `Pododdzial` INT NOT NULL,
  PRIMARY KEY (`idPersonel`),
  INDEX `Adres_idx` (`Adres` ASC) VISIBLE,
  INDEX `Pododdzial_idx` (`Pododdzial` ASC) VISIBLE,
  INDEX `Stopień_idx` (`Stopień` ASC) VISIBLE,
  CONSTRAINT `Adres`
    FOREIGN KEY (`Adres`)
    REFERENCES `djangoschema`.`Adres` (`idAdres`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Pododdzial`
    FOREIGN KEY (`Pododdzial`)
    REFERENCES `djangoschema`.`Pododdział` (`idPododdział`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Stopień`
    FOREIGN KEY (`Stopień`)
    REFERENCES `djangoschema`.`Stopień` (`idStopień`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Oddziały`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Oddziały` (
  `idOddziały` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Pododdzial` INT NOT NULL,
  PRIMARY KEY (`idOddziały`),
  INDEX `Pododdzial_idx` (`Pododdzial` ASC) VISIBLE,
  CONSTRAINT `Pododdzial`
    FOREIGN KEY (`Pododdzial`)
    REFERENCES `djangoschema`.`Pododdział` (`idPododdział`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Zwiazki_taktyczne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Zwiazki_taktyczne` (
  `idZwiazki` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Oddzialy` INT NOT NULL,
  PRIMARY KEY (`idZwiazki`),
  INDEX `Oddzial_idx` (`Oddzialy` ASC) VISIBLE,
  CONSTRAINT `Oddzial`
    FOREIGN KEY (`Oddzialy`)
    REFERENCES `djangoschema`.`Oddziały` (`idOddziały`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Sprzęt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Sprzęt` (
  `idtable2` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Ilość` INT NULL,
  PRIMARY KEY (`idtable2`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Baza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Baza` (
  `idBaza` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Adres` INT NOT NULL,
  `Zwiazki_taktyczne` INT NOT NULL,
  `Sprzet` INT NOT NULL,
  PRIMARY KEY (`idBaza`),
  INDEX `Adres_idx` (`Adres` ASC) VISIBLE,
  INDEX `Zwiazk_takt_idx` (`Zwiazki_taktyczne` ASC) VISIBLE,
  INDEX `Sprzet_idx` (`Sprzet` ASC) VISIBLE,
  CONSTRAINT `Adres`
    FOREIGN KEY (`Adres`)
    REFERENCES `djangoschema`.`Adres` (`idAdres`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Zwiazk_takt`
    FOREIGN KEY (`Zwiazki_taktyczne`)
    REFERENCES `djangoschema`.`Zwiazki_taktyczne` (`idZwiazki`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Sprzet`
    FOREIGN KEY (`Sprzet`)
    REFERENCES `djangoschema`.`Sprzęt` (`idtable2`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `djangoschema`.`Zwiazki operacyjne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `djangoschema`.`Zwiazki operacyjne` (
  `idZwiazki operacyjne` INT NOT NULL,
  `Nazwa` VARCHAR(45) NULL,
  `Zwiazek_taktyczny` INT NOT NULL,
  PRIMARY KEY (`idZwiazki operacyjne`),
  INDEX `Zwiazek_Taktyczny_idx` (`Zwiazek_taktyczny` ASC) VISIBLE,
  CONSTRAINT `Zwiazek_Taktyczny`
    FOREIGN KEY (`Zwiazek_taktyczny`)
    REFERENCES `djangoschema`.`Zwiazki_taktyczne` (`idZwiazki`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'dbadmin' IDENTIFIED BY '12345';

GRANT SELECT ON TABLE `djangoschema`.* TO 'dbadmin';
GRANT SELECT, INSERT, TRIGGER ON TABLE `djangoschema`.* TO 'dbadmin';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `djangoschema`.* TO 'dbadmin';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
